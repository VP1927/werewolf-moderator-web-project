{"ast":null,"code":"import _objectSpread from \"/home/vp1927/study/werewolf/werewolf-moderator-web-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/vp1927/study/werewolf/werewolf-moderator-web-project/src/view/game/CardSt.js\";\nimport React from 'react';\nimport globalState from './GlobalState';\n\nclass CardSt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardList: [],\n      cards: {}\n    };\n    this.findCard = this.findCard.bind(this);\n  }\n\n  componentDidMount() {\n    // if (globalState.pNum === 0){\n    // \tlet path = '/setup/player';\n    // \tthis.props.history.push(path);\n    // }\n    fetch('http://localhost:8080/cardlist').then(response => response.json()).then(data => this.setState({\n      cardList: data\n    }));\n  }\n\n  handleInput(e) {\n    let number = e.target.value;\n    let card = e.target.name;\n    this.setState(prevState => {\n      let cards = _objectSpread({}, prevState.cards);\n\n      cards[card] = number;\n      return {\n        cards\n      };\n    });\n    e.preventDefault();\n  }\n\n  findCard(id) {\n    return this.state.cardList.find(ele => {\n      return ele.idCard === id;\n    });\n  }\n\n  findPlayer(id) {\n    return globalState.players.find(ele => {\n      return ele.id === id;\n    });\n  }\n\n  handleSummit(e) {\n    let pList = [];\n    let chosenList = this.state.cards;\n    let chosen;\n    let sum = 0;\n\n    for (chosen in chosenList) {\n      sum += parseInt(chosenList[chosen]);\n    }\n\n    console.log(sum + ' ' + globalState.pNum);\n\n    if (globalState.pNum <= sum && sum <= globalState.pNum + 2) {\n      for (var i = 0; i < globalState.pNum; i++) pList.push(i);\n\n      for (chosen in chosenList) {\n        for (let i = 0; i < chosenList[chosen]; i++) {\n          var Pid = pList[Math.floor(Math.random() * pList.length)];\n\n          for (var j = 0; j < pList.length; j++) {\n            if (pList[j] === Pid) {\n              pList.splice(j, 1);\n            }\n          }\n\n          console.log(Pid);\n          var player = this.findPlayer(Pid); // player.role = this.state.cardList[chosen];\n        }\n      }\n\n      alert('starting game');\n      let path = '/setup/game';\n      this.props.history.push(path);\n    } else {\n      alert('The number of card is not sufficient, number of card should vary between the number of players and that number including 2 to 3 extra cards');\n    }\n\n    e.preventDefault();\n  }\n\n  render() {\n    const cardList = this.state.cardList.map(card => React.createElement(\"li\", {\n      key: card.idCard,\n      className: \"col-sm-3 singleInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: card.imageLink,\n      alt: card.idCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.handleInput(e),\n      name: card.idCard,\n      className: \"inputNum\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })));\n    if (cardList) return React.createElement(\"div\", {\n      className: \"container-fluid mainPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"pageName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \" Card list \"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handleSummit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"row cardList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, cardList), React.createElement(\"div\", {\n      className: \"container summit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"col-sm-2 btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-sm-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default CardSt;","map":{"version":3,"sources":["/home/vp1927/study/werewolf/werewolf-moderator-web-project/src/view/game/CardSt.js"],"names":["React","globalState","CardSt","Component","constructor","props","state","cardList","cards","findCard","bind","componentDidMount","fetch","then","response","json","data","setState","handleInput","e","number","target","value","card","name","prevState","preventDefault","id","find","ele","idCard","findPlayer","players","handleSummit","pList","chosenList","chosen","sum","parseInt","console","log","pNum","i","push","Pid","Math","floor","random","length","j","splice","player","alert","path","history","render","map","imageLink"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport globalState from './GlobalState'\n\n\nclass CardSt extends React.Component{\n \tconstructor(props) {\n    \tsuper(props);\n    \tthis.state = {\n      \tcardList: [],\n      \tcards: {},\n    \t}\n    \tthis.findCard = this.findCard.bind(this);\n\t}\n\n  \tcomponentDidMount() {\n  \t\t// if (globalState.pNum === 0){\n  \t\t// \tlet path = '/setup/player';\n  \t\t// \tthis.props.history.push(path);\n  \t\t// }\n\n   \t\tfetch('http://localhost:8080/cardlist')\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => this.setState({ cardList: data }));\n\n  \t}\n\n  \thandleInput(e) {\n    \tlet number = e.target.value;\n    \tlet card = e.target.name;\n    \tthis.setState(prevState => {\n    \t  \tlet cards = {...prevState.cards};\n    \t  \tcards[card] = number;\n      \treturn {cards};\n    })\n\n    e.preventDefault();\n  \t}\n\n  \tfindCard(id){\n  \t\treturn this.state.cardList.find((ele) => {\n  \t\t\treturn ele.idCard === id;\n  \t\t});\n  \t}\n\n  \tfindPlayer(id){\n  \t\treturn globalState.players.find( (ele)=> {\n  \t\t\treturn ele.id === id;\n  \t\t});\n  \t}\n\n  \thandleSummit(e){\n\t\tlet pList = [];\n  \t\tlet chosenList = this.state.cards;\n\t  \tlet chosen;\n\t  \tlet sum = 0;\n\n  \t\tfor (chosen in chosenList){\n  \t\t\tsum += parseInt(chosenList[chosen]);\n  \t\t}\n\t  \tconsole.log(sum + ' ' + globalState.pNum);\n\n  \t\tif ((globalState.pNum <= sum) && (sum <= globalState.pNum+2)){\n  \t\t\tfor (var i=0;i<globalState.pNum;i++) pList.push(i);\n\n\t  \t\tfor (chosen in chosenList){\n\t\t\t\tfor (let i=0;i<chosenList[chosen]; i++){\n\t\t\t\t\tvar Pid = pList[Math.floor(Math.random()*pList.length)];\n\t\t\t\t\t\n\t\t\t\t\tfor( var j = 0; j < pList.length; j++){ \n\t\t\t\t\t   if ( pList[j] === Pid) {\n\t\t\t\t\t     pList.splice(j, 1); \n\t\t\t\t\t   }\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconsole.log(Pid);\n\t\t\t\t\tvar player = this.findPlayer(Pid);\n\t\t  \t\t\t// player.role = this.state.cardList[chosen];\n\n\t\t\t\t}\t\t\n\t  \t\t}\n\t  \t\talert('starting game');\n\t  \t\tlet path = '/setup/game';\n  \t\t\tthis.props.history.push(path);\n  \t\t}\n  \t\telse {\n\t  \t\talert('The number of card is not sufficient, number of card should vary between the number of players and that number including 2 to 3 extra cards');\n  \t\t}\n\t  \t\t\n    \te.preventDefault();\n  \t}\n\n  \trender() {\n    \tconst cardList = this.state.cardList.map (card =>\n      \t\t<li key={card.idCard} className='col-sm-3 singleInput'>\n      \t\t\t<div className='image'>\n\t        \t\t<img src={card.imageLink} alt={card.idCard}/>\n      \t\t\t</div>\n\t\t        <input type=\"text\"  onChange = {(e) => this.handleInput(e)} name={card.idCard} className =\"inputNum\"/>\n      \t\t</li>\n    \t);\n\n\t    \tif (cardList) \n      \treturn (\n        \t<div className=\"container-fluid mainPage\">\n\t\t\t\t<h1 className= 'pageName'> Card list </h1>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<form onSubmit={(e) => this.handleSummit(e)}>\n\t\t\t\t\t\t<ul className='row cardList'>\n\t          \t\t\t{cardList}\n\t          \t\t\t</ul>\n\t          \t\t\t<div className=\"container summit\">\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-sm-5\"></div>\n\t          \t\t\t\t\t<input type=\"submit\" value=\"Submit\" className=\"col-sm-2 btn btn-primary\"/>\n\t\t\t\t\t\t\t\t<div className=\"col-sm-5\"></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t          \t\t</form>\n          \t\t</div>\n        \t</div>\n      \t)\n  }\n}\n\nexport default CardSt;"]},"metadata":{},"sourceType":"module"}