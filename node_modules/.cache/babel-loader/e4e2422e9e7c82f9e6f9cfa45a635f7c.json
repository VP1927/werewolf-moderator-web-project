{"ast":null,"code":"import _objectSpread from \"/home/vp1927/study/werewolf/werewolf-moderator-web-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/vp1927/study/werewolf/werewolf-moderator-web-project/src/view/game/PlayerSt.js\";\nimport React from 'react';\nimport globalState from './GlobalState';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nclass PlayerSt extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      playersList: {}\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.inputName = this.inputName.bind(this);\n    this.handleSubmitName = this.handleSubmitName.bind(this);\n  }\n\n  handleChange(event) {\n    const num = event.target.validity.valid ? event.target.value : this.state.value;\n    this.setState({\n      value: num\n    });\n  }\n\n  handleSubmit(event) {\n    globalState.pNum = parseInt(this.state.value, 10);\n    this.setState({\n      value: '',\n      playersList: {}\n    }); // alert('type of value ' + typeof globalState.pNum + ' is ' + globalState.pNum);\n\n    event.preventDefault();\n  }\n\n  inputName(event) {\n    let value = event.target.value;\n    let name = event.target.name;\n    this.setState(prevState => {\n      let playersList = _objectSpread({}, prevState.playersList); // creating copy of state variable name\n\n\n      playersList[name] = value; // update the name property, assign a new value     \n\n      return {\n        playersList\n      }; // return new object name object\n    });\n    event.preventDefault();\n  }\n\n  genForm(number) {\n    let table = []; // this.state.name = [];\n\n    for (let i = 0; i < number; i++) {\n      // this.state.name.push([]);\n      table.push( // <li key={i}>\n      React.createElement(\"label\", {\n        key: i,\n        className: \" col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Player \", i + 1, \" name:\", React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.inputName,\n        class: \"inputName\",\n        name: 'player_' + (i + 1),\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })) // </li>\n      );\n    }\n\n    if (globalState.pNum > 0) {\n      table.push(React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        key: \"input\",\n        className: \"summitBtn col-sm-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-sm-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }))));\n    }\n\n    return table;\n  }\n\n  handleSubmitName(event) {\n    globalState.players = [];\n    let list = this.state.playersList;\n    let i = 0;\n    var player;\n\n    for (player in list) {\n      if (list[player] == '') continue;\n      let p = {\n        id: i,\n        name: list[player],\n        role: ''\n      };\n      globalState.players.push(p);\n      i += 1;\n    }\n\n    globalState.players.sort();\n    alert(globalState.players[0].name);\n    event.preventDefault();\n\n    if (globalState.players.length != globalState.pNum) {\n      alert('Empty name is not allow');\n      globalState.players = [];\n    } else {\n      let path = '/setup/card';\n      this.props.history.push(path);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"number-summit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Number of player:\", React.createElement(\"input\", {\n      type: \"text\",\n      pattern: \"[0-9]*\",\n      onChange: this.handleChange,\n      value: this.state.value,\n      id: \"inputNumber\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      onSubmit: this.handleSubmitName,\n      className: \"name-summit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.genForm(globalState.pNum))));\n  }\n\n}\n\nexport default PlayerSt;","map":{"version":3,"sources":["/home/vp1927/study/werewolf/werewolf-moderator-web-project/src/view/game/PlayerSt.js"],"names":["React","globalState","BrowserRouter","Router","Route","Switch","Redirect","PlayerSt","Component","constructor","props","state","value","playersList","handleChange","bind","handleSubmit","inputName","handleSubmitName","event","num","target","validity","valid","setState","pNum","parseInt","preventDefault","name","prevState","genForm","number","table","i","push","players","list","player","p","id","role","sort","alert","length","path","history","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport globalState from './GlobalState'\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nclass PlayerSt extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state= {\n\t\t\tvalue :'',\n\t\t\tplayersList : {},\n\t\t}\n\n\t    this.handleChange = this.handleChange.bind(this);\n\t    this.handleSubmit = this.handleSubmit.bind(this);\n\t    this.inputName = this.inputName.bind(this);\n\t    this.handleSubmitName = this.handleSubmitName.bind(this);\n\t}\n\n\thandleChange(event) {\n\t\tconst num = (event.target.validity.valid) ? event.target.value : this.state.value;\n    \tthis.setState({value: num});\n  \t}\n\n    handleSubmit(event) {\n    \tglobalState.pNum = parseInt(this.state.value,10);\n    \tthis.setState({value : '',playersList:{}});\n    \t// alert('type of value ' + typeof globalState.pNum + ' is ' + globalState.pNum);\n    \tevent.preventDefault();\n  \t}\n\n  \tinputName(event){\t\n  \t\tlet value = event.target.value;\n  \t\tlet name = event.target.name;\n\t\tthis.setState(prevState => {\n\t\t  let playersList = {...prevState.playersList}  // creating copy of state variable name\n\t\t  playersList[name] = value;                     // update the name property, assign a new value     \n\t\t  return { playersList };                                 // return new object name object\n\t\t})\n\n    \tevent.preventDefault();\n  \t}\n\n  \tgenForm(number){\n  \t\tlet table = [];\n  \t\t// this.state.name = [];\n\n  \t\tfor (let i = 0;i<number;i++){\n  \t\t\t// this.state.name.push([]);\n  \t\t\ttable.push(\n  \t\t\t\t// <li key={i}>\n  \t\t\t\t\t<label key={i} className=' col-sm-3'>\n\t        \t\t\tPlayer {i+1} name: \n\t          \t\t\t<input type=\"text\" onChange={this.inputName} class='inputName' name={'player_' + (i+1)} key={i} />\n\t        \t\t</label>\n  \t\t\t\t// </li>\n  \t\t\t)\n  \t\t}\n  \t\tif (globalState.pNum >0){\n  \t\t\ttable.push(\n  \t\t\t\t<div className='container'>\n  \t\t\t\t\t<div className='row'>\n\t\t  \t\t\t\t<div className='col-sm-5'/>\n\t\t  \t\t\t\t\t<input type=\"submit\" value=\"Submit\" key='input' className='summitBtn col-sm-2'/>\n\t\t  \t\t\t\t<div className='col-sm-5'/>\n\t\t  \t\t\t</div>\n\t  \t\t\t</div>\n  \t\t\t);\n  \t\t}\n  \t\treturn table;\n  \t}\n\n  \thandleSubmitName(event){\n  \t\tglobalState.players = [];\n  \t\tlet list = this.state.playersList;\n  \t\tlet i = 0;\n  \t\tvar player;\n  \t\tfor (player in list){\n  \t\t\tif (list[player] == '') continue;\n  \t\t\tlet p = {\n  \t\t\t\tid : i,\n  \t\t\t\tname : list[player],\n  \t\t\t\trole : '',\n  \t\t\t}\n  \t\t\tglobalState.players.push(p);\n  \t\t\ti += 1;\n  \t\t}\n  \t\tglobalState.players.sort()\n  \t\talert(globalState.players[0].name);\n  \t\tevent.preventDefault();\n\t\tif (globalState.players.length != globalState.pNum){\n\t\t\talert('Empty name is not allow');\n\t\t\tglobalState.players = [];\n\t\t}  \t\t\n\t\telse{\n  \t\tlet path = '/setup/card';\n  \t\tthis.props.history.push(path);}\n  \t}\n\n\trender (){\n\t\treturn (\n\t\t\t<div className='container'>\n\t     \t\t<form onSubmit={this.handleSubmit} className='number-summit'>\n\t        \t\t<label>\n\t        \t\t\tNumber of player:\n\t          \t\t\t<input type=\"text\" pattern=\"[0-9]*\" onChange={this.handleChange} value={this.state.value}  id='inputNumber'/>\n\t        \t\t</label>\n\t        \t\t<input type=\"submit\" value=\"Submit\" />\n\n\t      \t\t</form>\n\n\t      \t\t<form onSubmit={this.handleSubmitName} className='name-summit'>\n\t\t      \t\t<div className='row'>\n\t\t\t        \t{this.genForm(globalState.pNum)}\n\t      \t\t\t</div>\n\t      \t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default PlayerSt"]},"metadata":{},"sourceType":"module"}