{"ast":null,"code":"import _objectSpread from \"/home/vp1927/study/werewolf/werewolf-moderator-web-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/vp1927/study/werewolf/werewolf-moderator-web-project/src/view/game/MainGame.js\";\nimport React from 'react';\nimport globalState from './GlobalState'; // const globalState = {\n//     players: [\n//         { id: 0, name: 'Nhi', imageLink: '/images/Werewolf.jpg', role: 'Werewolf' },\n//         { id: 1, name: 'Thoa', imageLink: '/images/Werewolf.jpg', role: 'Werewolf' },\n//         { id: 2, name: 'Cuong', imageLink: '/images/Villager.jpg', role: 'Villager' },\n//         { id: 3, name: 'Hanh', imageLink: '/images/Hunter.jpg', role: 'Hunter' }\n//     ]\n// };\n\nclass Effect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      effects: [] // this.handleEffect = this.handleEffect.bind(this);\n\n    };\n  }\n\n  componentDidMount() {\n    let link = 'http://localhost:8080/effect/' + this.props.idcard;\n    fetch(link).then(response => response.json()).then(data => this.setState({\n      effects: Array.from(data)\n    }));\n  }\n\n  handleEffect(e, effect) {\n    if (this.props.phase === 'night') {\n      this.props.onHandleEffect(effect.name);\n\n      if (!effect.multitime) {\n        this.setState({\n          effects: this.state.effects.filter(function (eff) {\n            return eff !== effect;\n          })\n        });\n      }\n    }\n  }\n\n  render() {\n    const effects = this.state.effects;\n    if (!effects) return null;else return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, effects.map(effect => React.createElement(\"li\", {\n      key: effect.ideffect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"icon\",\n      src: effect.iconLink,\n      name: effect.name,\n      onClick: e => this.handleEffect(e, effect),\n      alt: \"effect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nclass MainGame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: [],\n      players: globalState.players,\n      phase: 'night',\n      effectState: {},\n      currentState: '',\n      couple: [],\n      summary: {\n        deaths: [],\n        number: 0\n      }\n    };\n    this.handleEffect = this.handleEffect.bind(this);\n    this.handleAffected = this.handleAffected.bind(this);\n    this.handlePhase = this.handlePhase.bind(this);\n    this.addIndirectDeath = this.addIndirectDeath.bind(this);\n  }\n\n  calculateWinning() {\n    let count = 0;\n    let l = this.state.players.length;\n\n    for (let i = 0; i < this.state.players.length; i++) {\n      if (this.state.players[i].role.idCard === 0) count++;\n    }\n\n    if (this.state.couple.length === 2) {\n      if ((this.state.couple[0].role.idCard === 0 || this.state.couple[1].role.idCard === 0) && this.state.couple[0].role !== this.state.couple[1].role) {\n        let couWin = true;\n\n        for (let z = 0; z < l; z++) {\n          if (this.state.players[z] !== this.state.couple[0] && this.state.players[z] !== this.state.couple[1]) {\n            couWin = false;\n            break;\n          }\n        }\n\n        if (couWin) return 'Couple';\n      } // console.log(this.state.couple.length);\n\n    }\n\n    if (count === 0) return 'Human';\n    if (Math.round(l / 2) <= count) return 'Werewolf';\n    return null;\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/cardlist').then(response => response.json()).then(data => this.setState({\n      cards: data\n    }));\n  }\n\n  handleEffect(effect) {\n    if (this.state.phase === 'night') {\n      this.setState({\n        currentState: effect\n      });\n    }\n  }\n\n  handleAffected(player) {\n    if (this.state.phase === 'night') {\n      const currentState = this.state.currentState;\n\n      if (currentState === '') {\n        alert('The effect has not been chosen');\n      } else if (currentState === 'Connect') {\n        if (this.state.couple.length < 2) {\n          this.setState(state => {\n            const couple = state.couple.concat(player);\n            return {\n              couple\n            };\n          });\n        }\n\n        if (this.state.couple.length === 1) {\n          this.setState({\n            currentState: ''\n          });\n        }\n      } else {\n        this.setState(prevState => {\n          let effectState = _objectSpread({}, prevState.effectState);\n\n          effectState[this.state.currentState] = player;\n          return {\n            effectState\n          };\n        });\n      }\n    } else {\n      this.setState(prevState => {\n        let effectState = _objectSpread({}, prevState.effectState);\n\n        effectState['lynch'] = player;\n        return {\n          effectState\n        };\n      });\n    }\n  }\n\n  addIndirectDeath(deaths, directDeath) {\n    const couple = this.state.couple;\n    const effectState = this.state.effectState;\n\n    if (directDeath.role.role === 'Hunter') {\n      if (effectState['Shoot'] === couple[0] || effectState['Shoot'] === couple[1]) {\n        deaths.push(couple[0]);\n        deaths.push(couple[1]);\n      }\n\n      deaths.push(effectState['Shoot']);\n    }\n\n    if (directDeath === couple[0] || directDeath === couple[1]) {\n      if (directDeath.role.role === 'Hunter') {\n        deaths.push(effectState['Shoot']);\n      }\n\n      deaths.push(couple[0]);\n      deaths.push(couple[1]);\n      this.setState({\n        couple: []\n      });\n    }\n  }\n\n  handlePhase() {\n    const effectState = this.state.effectState;\n    let deaths = [];\n\n    if (this.state.phase === 'night') {\n      const bittenPlayer = effectState['Bite'];\n\n      if (effectState['Protect'] !== bittenPlayer && effectState['Potion'] !== bittenPlayer) {\n        deaths.push(bittenPlayer);\n        this.addIndirectDeath(deaths, bittenPlayer);\n      }\n\n      if ('Poison' in effectState) {\n        deaths.push(effectState['Poison']);\n        this.addIndirectDeath(deaths, effectState['Poison']);\n      }\n\n      deaths = [...new Set(deaths)]; // alert(deaths.length);\n\n      this.setState({\n        phase: 'day',\n        currentState: '',\n        effectState: {},\n        summary: {\n          deaths: deaths,\n          number: deaths.length\n        },\n        players: this.state.players.filter(function (player) {\n          return deaths.indexOf(player) === -1;\n        })\n      });\n    } else {\n      if (effectState['lynch'] != null) {\n        deaths.push(effectState['lynch']);\n        this.addIndirectDeath(deaths, effectState['lynch']);\n        deaths = [...new Set(deaths)];\n        this.setState({\n          phase: 'night',\n          effectState: {},\n          summary: {\n            deaths: [...new Set(deaths)],\n            number: deaths.length\n          },\n          players: this.state.players.filter(function (player) {\n            return deaths.indexOf(player) === -1;\n          })\n        });\n      } else {\n        deaths = [...new Set(deaths)];\n        this.setState({\n          phase: 'night',\n          effectState: {}\n        });\n      }\n    }\n  }\n\n  render() {\n    const cards = this.state.cards; // this.state.players.forEach((player)=>console.log(player.role))\n\n    if (!cards) return null;\n    let winner = this.calculateWinning();\n\n    if (winner) {\n      return React.createElement(\"div\", {\n        className: \"container-fluid mainPage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"pageName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \" Main Game \"), React.createElement(\"div\", {\n        className: \"container GamePlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"phase\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, winner + ' has won')));\n    } else return React.createElement(\"div\", {\n      className: \"container-fluid mainPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"pageName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \" Main Game \"), React.createElement(\"div\", {\n      className: \"container GamePlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"phase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, this.state.phase, \" phase\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4 roleDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, cards.map(card => React.createElement(\"li\", {\n      key: card.idCard,\n      className: \"roleName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, card.role), React.createElement(Effect, {\n      idcard: card.idCard,\n      onHandleEffect: this.handleEffect,\n      phase: this.state.phase,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"col-sm-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"row player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, this.state.players.map(player => React.createElement(\"li\", {\n      key: player.id,\n      onClick: () => this.handleAffected(player),\n      className: \"col-sm-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"pName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, player.name), React.createElement(\"div\", {\n      className: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: player.role.imageLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }))))))))), React.createElement(\"button\", {\n      onClick: this.handlePhase,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Next phase\")));\n  }\n\n}\n\nexport default MainGame;","map":{"version":3,"sources":["/home/vp1927/study/werewolf/werewolf-moderator-web-project/src/view/game/MainGame.js"],"names":["React","globalState","Effect","Component","constructor","props","state","effects","componentDidMount","link","idcard","fetch","then","response","json","data","setState","Array","from","handleEffect","e","effect","phase","onHandleEffect","name","multitime","filter","eff","render","map","ideffect","iconLink","MainGame","cards","players","effectState","currentState","couple","summary","deaths","number","bind","handleAffected","handlePhase","addIndirectDeath","calculateWinning","count","l","length","i","role","idCard","couWin","z","Math","round","player","alert","concat","prevState","directDeath","push","bittenPlayer","Set","indexOf","winner","card","id","imageLink"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport globalState from './GlobalState'\n\n// const globalState = {\n//     players: [\n//         { id: 0, name: 'Nhi', imageLink: '/images/Werewolf.jpg', role: 'Werewolf' },\n//         { id: 1, name: 'Thoa', imageLink: '/images/Werewolf.jpg', role: 'Werewolf' },\n//         { id: 2, name: 'Cuong', imageLink: '/images/Villager.jpg', role: 'Villager' },\n//         { id: 3, name: 'Hanh', imageLink: '/images/Hunter.jpg', role: 'Hunter' }\n//     ]\n// };\n\nclass Effect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            effects: [],\n        }\n\n        // this.handleEffect = this.handleEffect.bind(this);\n    }\n\n    componentDidMount() {\n        let link = 'http://localhost:8080/effect/' + this.props.idcard;\n        fetch(link)\n            .then(response => response.json())\n            .then(data => this.setState({ effects: Array.from(data) }));\n\n    }\n\n    handleEffect(e, effect) {\n    \tif (this.props.phase === 'night'){\n    \t\tthis.props.onHandleEffect(effect.name);\n\n\t        if (!effect.multitime) {\n\t            this.setState({\n\t                effects: this.state.effects.filter(function (eff) {\n\t                    return eff !== effect;\n\t                })\n\t            })\n\t        }\n    \t}\n\n    }\n\n    render() {\n        const { effects } = this.state;\n\n        if (!effects) return null;\n        else\n            return (\n                <div>\n                    <ul>\n                        {effects.map(effect =>\n                            <li key={effect.ideffect}>\n                                <img className='icon' src={effect.iconLink} name={effect.name} onClick={(e) => this.handleEffect(e, effect)} alt = 'effect' />\n                            </li>)}\n                    </ul>\n                </div>\n            );\n    }\n}\n\nclass MainGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cards: [],\n            players: globalState.players,\n            phase: 'night',\n            effectState: {},\n            currentState: '',\n            couple: [],\n            summary: {\n                deaths: [],\n                number: 0\n            }\n        }\n\n\n        this.handleEffect = this.handleEffect.bind(this);\n        this.handleAffected = this.handleAffected.bind(this);\n        this.handlePhase = this.handlePhase.bind(this);\n        this.addIndirectDeath = this.addIndirectDeath.bind(this);\n    }\n\n    calculateWinning(){\n\n        let count=0;\n        let l = this.state.players.length;\n\n\n        for (let i=0;i<this.state.players.length;i++){\n            if (this.state.players[i].role.idCard === 0) count++;\n        }\n\n        if  (this.state.couple.length===2) {\n            if ( ((this.state.couple[0].role.idCard === 0)||(this.state.couple[1].role.idCard === 0)) \n                && (this.state.couple[0].role !== this.state.couple[1].role) ){\n                let couWin = true;\n                for (let z=0;z<l;z++){\n                    if ((this.state.players[z] !== this.state.couple[0])&&(this.state.players[z] !== this.state.couple[1])){\n                        couWin = false;break;\n                    }\n                }\n                if (couWin) return 'Couple'\n            }\n            // console.log(this.state.couple.length);\n        }\n        if (count === 0) return 'Human';\n        if (Math.round(l/2) <= count) return 'Werewolf';\n        return null;\n    }\n\n    componentDidMount() {\n\n        fetch('http://localhost:8080/cardlist')\n            .then(response => response.json())\n            .then(data => this.setState({ cards: data }))\n    }\n\n    handleEffect(effect) {\n    \tif (this.state.phase ==='night'){\n\t        this.setState({ currentState: effect });\n    \t}\n    }\n\n    handleAffected(player) {\n\n        if (this.state.phase === 'night') {\n            const currentState = this.state.currentState;\n\n            if (currentState === '') {\n                alert('The effect has not been chosen');\n            }\n            else if (currentState === 'Connect') {\n                if (this.state.couple.length < 2) {\n                    this.setState(state => {\n                        const couple = state.couple.concat(player);\n                        return { couple };\n                    });\n                }\n                if (this.state.couple.length === 1) {\n                \tthis.setState({currentState: ''});\n                }\n\n            }\n\n            else {\n                this.setState(prevState => {\n                    let effectState = { ...prevState.effectState };\n                    effectState[this.state.currentState] = player;\n                    return { effectState };\n                })\n            }\n        }\n\n        else {\n            this.setState(prevState => {\n                let effectState = { ...prevState.effectState };\n                effectState['lynch'] = player;\n                return { effectState };\n            })\n        }\n    }\n\n    addIndirectDeath(deaths, directDeath) {\n        const couple = this.state.couple;\n        const effectState = this.state.effectState;\n\n        if (directDeath.role.role === 'Hunter') {\n            if (effectState['Shoot'] === couple[0] || effectState['Shoot'] === couple[1]) {\n                deaths.push(couple[0]);\n                deaths.push(couple[1]);\n            }\n            deaths.push(effectState['Shoot']);\n\n        }\n\n        if (directDeath === couple[0] || directDeath === couple[1]) {\n            if (directDeath.role.role === 'Hunter') {\n                deaths.push(effectState['Shoot']);\n            }\n            deaths.push(couple[0]);\n            deaths.push(couple[1]);\n            this.setState({couple : []});\n        }\n    }\n\n    handlePhase() {\n        const effectState = this.state.effectState;\n        let deaths = [];\n\n        if (this.state.phase === 'night') {\n            const bittenPlayer = effectState['Bite'];\n\n            if (effectState['Protect'] !== bittenPlayer && effectState['Potion'] !== bittenPlayer) {\n                deaths.push(bittenPlayer);\n                this.addIndirectDeath(deaths, bittenPlayer);\n            }\n\n            if (('Poison' in effectState)) {\n                deaths.push(effectState['Poison']);\n                this.addIndirectDeath(deaths, effectState['Poison']);\n            }\n\n            deaths = [...new Set(deaths)];\n            // alert(deaths.length);\n\n            this.setState({\n                phase: 'day',\n                currentState: '',\n                effectState: {},\n                summary: {\n                    deaths: deaths,\n                    number: deaths.length\n                },\n                players: this.state.players.filter(function (player) {\n                    return deaths.indexOf(player) === -1\n                })\n            })\n        }\n\n        else {\n            if (effectState['lynch'] != null){\n                deaths.push(effectState['lynch']);\n                this.addIndirectDeath(deaths, effectState['lynch']);\n\n                deaths = [...new Set(deaths)];\n\n                this.setState({\n                    phase: 'night',\n                    effectState: {},\n                    summary: {\n                        deaths: [...new Set(deaths)],\n                        number: deaths.length\n                    },\n                    players: this.state.players.filter(function (player) {\n                        return deaths.indexOf(player) === -1\n                    })\n                });\n            }\n            else {\n                deaths = [...new Set(deaths)];\n                \n                this.setState({\n                    phase: 'night',\n                    effectState: {},\n                });\n            }\n        }\n    }\n\n    render() {\n        const cards = this.state.cards;\n        // this.state.players.forEach((player)=>console.log(player.role))\n        if (!cards) return null;\n        let winner = this.calculateWinning();\n        if (winner){\n            return (\n                <div className='container-fluid mainPage'>\n                    <h1 className= 'pageName'> Main Game </h1>  \n                    <div className='container GamePlay'>\n                        <h2 className='phase'>{winner + ' has won'}</h2>\n                    </div>\n                </div>\n            )\n        }\n\n        else return (\n            <div className='container-fluid mainPage'>\n                <h1 className= 'pageName'> Main Game </h1>            \n                <div className='container GamePlay'>\n                    <h2 className='phase'>{this.state.phase} phase</h2>\n                    <div className='container'>\n                        <div className='row'>\n                            <div className='col-sm-4 roleDiv'>\n                                <ul>\n                                    {cards.map(card =>\n                                        <li key={card.idCard} className='roleName'>\n                                            <h3>{card.role}</h3>\n                                            <Effect idcard={card.idCard} onHandleEffect={this.handleEffect} phase={this.state.phase}/>\n                                        </li>)}\n                                </ul>\n                            </div>\n                            <div className='col-sm-8'>\n                            \t<div className='container'>\n                                <ul className='row player'>\n                                    {this.state.players.map(player =>\n                                        <li key={player.id} onClick={() => this.handleAffected(player)} className='col-sm-3' >\n    \t                                    <h3 className='pName'>{player.name}</h3>\n                                        \t<div className='image'>\n    \t                                        <img src={player.role.imageLink} />\n    \t                                    </div>\n                                        </li>)}</ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <button onClick={this.handlePhase}>Next phase</button>\n                    \n                </div>\n            </div>\n\n        )\n    }\n\n}\n\nexport default MainGame;\n"]},"metadata":{},"sourceType":"module"}